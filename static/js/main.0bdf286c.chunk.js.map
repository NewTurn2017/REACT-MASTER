{"version":3,"sources":["api.tsx","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","NICO_URL","fetchCoins","fetch","then","response","json","coinId","fetchCoinTickers","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","useQuery","fetchCoinHistory","refetchInterval","isLoading","data","seriesData","map","d","x","Date","time_open","y","parseFloat","open","high","low","close","options","theme","mode","chart","type","height","toolbar","show","grid","xaxis","axisBorder","axisTicks","yaxis","tooltip","enabled","plotOptions","candlestick","colors","upward","downward","series","OverView","styled","div","OverViewItem","span","props","accentColor","textColor","Price","tickersData","quotes","USD","price","percent_change_24h","percent_change_7d","percent_change_30d","Container","Header","header","Title","h1","Loader","Overview","OverviewItem","Tabs","Back","Tab","isActive","Description","p","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","loading","Helmet","name","to","rank","symbol","toFixed","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","basename","process","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.0bdf286c.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`\nconst NICO_URL = `https://ohlcv-api.nomadcoders.workers.dev`\nexport async function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json())\n}\n\nexport async function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  )\n}\n\nexport async function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  )\n}\n\nexport async function fetchCoinHistory(coinId: string) {\n  // const endDate = Math.floor(Date.now() / 1000)\n  // const startDate = endDate - 60 * 60 * 24 // 1 days\n  return fetch(`${NICO_URL}?coinId=${coinId}`).then((response) =>\n    response.json()\n  )\n}\n","import { atom } from 'recoil'\n\nexport const isDarkAtom = atom({\n  key: 'isDark',\n  default: false,\n})\n","import { useQuery } from 'react-query'\nimport { fetchCoinHistory } from '../api'\nimport ApexCharts from 'react-apexcharts'\nimport { useRecoilValue } from 'recoil'\nimport { isDarkAtom } from '../atoms'\n\ninterface ChartProps {\n  coinId: string\n}\n\ninterface IHistoricalData {\n  time_open: number\n  time_close: number\n  open: string\n  high: string\n  low: string\n  close: string\n  volume: string\n  market_cap: number\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom)\n\n  const { isLoading, data } = useQuery<IHistoricalData[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  )\n\n  const seriesData = data?.map((d: IHistoricalData) => ({\n    x: new Date(d.time_open * 1000),\n    y: [\n      parseFloat(d.open),\n      parseFloat(d.high),\n      parseFloat(d.low),\n      parseFloat(d.close),\n    ],\n  }))\n\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ApexCharts\n          // candlestick chart\n          options={{\n            theme: {\n              mode: isDark ? 'dark' : 'light',\n            },\n            chart: {\n              type: 'candlestick',\n              height: 350,\n              toolbar: {\n                show: false,\n              },\n            },\n            grid: {\n              show: false,\n            },\n\n            xaxis: {\n              type: 'datetime',\n              axisBorder: {\n                show: false,\n              },\n              axisTicks: {\n                show: false,\n              },\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true,\n              },\n            },\n            tooltip: {\n              enabled: false,\n            },\n            //beautify the chart\n\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: '#D23C4B',\n                  downward: '#1C5ED2',\n                },\n              },\n            },\n          }}\n          series={[{ data: seriesData }] as unknown as number[]}\n          type=\"candlestick\"\n          height={350}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Chart\n","import { useQuery } from 'react-query'\nimport styled from 'styled-components'\nimport { fetchCoinTickers } from '../api'\n\ninterface ChartProps {\n  coinId: string\n}\n\ninterface PriceData {\n  id: string\n  name: string\n  symbol: string\n  rank: number\n  circulating_supply: number\n  total_supply: number\n  max_supply: number\n  beta_value: number\n  first_data_at: string\n  last_updated: string\n  quotes: {\n    USD: {\n      ath_date: string\n      ath_price: number\n      market_cap: number\n      market_cap_change_24h: number\n      percent_change_1h: number\n      percent_change_1y: number\n      percent_change_6h: number\n      percent_change_7d: number\n      percent_change_12h: number\n      percent_change_15m: number\n      percent_change_24h: number\n      percent_change_30d: number\n      percent_change_30m: number\n      percent_from_price_ath: number\n      price: number\n      volume_24h: number\n      volume_24h_change_24h: number\n    }\n  }\n}\n\nconst OverView = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 25px 0px;\n  gap: 10px;\n`\n\nconst OverViewItem = styled.span`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 14px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.accentColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.textColor};\n`\n\nfunction Price({ coinId }: ChartProps) {\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  )\n  //📈📉\n  //👉\n  return (\n    <div>\n      <OverView>\n        <OverViewItem>Price 👉 {tickersData?.quotes.USD.price}</OverViewItem>\n\n        <OverViewItem>\n          1d 👉 {tickersData?.quotes.USD.percent_change_24h}%{' '}\n          {tickersData!!.quotes.USD.percent_change_24h > 0 ? '📈' : '📉'}\n        </OverViewItem>\n\n        <OverViewItem>\n          7d 👉 {tickersData?.quotes.USD.percent_change_7d}%{' '}\n          {tickersData!!.quotes.USD.percent_change_7d > 0 ? '📈' : '📉'}\n        </OverViewItem>\n\n        <OverViewItem>\n          30d 👉 {tickersData?.quotes.USD.percent_change_30d}%{' '}\n          {tickersData!!.quotes.USD.percent_change_30d > 0 ? '📈' : '📉'}\n        </OverViewItem>\n      </OverView>\n    </div>\n  )\n}\n\nexport default Price\n","import { useEffect, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport {\n  Link,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from 'react-router-dom'\nimport styled from 'styled-components'\nimport Chart from './Chart'\nimport Price from './Price'\nimport { fetchCoinInfo, fetchCoinTickers } from '../api'\nimport { Helmet } from 'react-helmet'\n\ninterface RouteParams {\n  coinId: string\n}\n\ninterface RouteState {\n  name: string\n}\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 48px;\n`\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 24px;\n`\n\ninterface InfoData {\n  id: string\n  name: string\n  symbol: string\n  rank: number\n  is_new: boolean\n  is_active: boolean\n  type: string\n  logo: string\n  description: string\n  message: string\n  open_source: boolean\n  started_at: string\n  development_status: string\n  hardware_wallet: boolean\n  proof_type: string\n  org_structure: string\n  hash_algorithm: string\n  first_data_at: string\n  last_data_at: string\n}\n\ninterface PriceData {\n  id: string\n  name: string\n  symbol: string\n  rank: number\n  circulating_supply: number\n  total_supply: number\n  max_supply: number\n  beta_value: number\n  first_data_at: string\n  last_updated: string\n  quotes: {\n    USD: {\n      ath_date: string\n      ath_price: number\n      market_cap: number\n      market_cap_change_24h: number\n      percent_change_1h: number\n      percent_change_1y: number\n      percent_change_6h: number\n      percent_change_7d: number\n      percent_change_12h: number\n      percent_change_15m: number\n      percent_change_24h: number\n      percent_change_30d: number\n      percent_change_30m: number\n      percent_from_price_ath: number\n      price: number\n      volume_24h: number\n      volume_24h_change_24h: number\n    }\n  }\n}\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  color: ${(props) => props.theme.textColor};\n\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`\nconst Back = styled.div`\n  margin-right: 50px;\n  a {\n    color: '${(props) => props.theme.textColor}';\n    font-size: 45px;\n  }\n`\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`\nconst Description = styled.p`\n  margin: 20px 0px;\n`\n\ninterface ICoinProps {}\n\nfunction Coin({}: ICoinProps) {\n  const { coinId } = useParams<RouteParams>()\n  const { state } = useLocation<RouteState>()\n  const priceMatch = useRouteMatch(`/${coinId}/price`)\n  const chartMatch = useRouteMatch(`/${coinId}/chart`)\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  )\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId)\n  )\n\n  const loading = infoLoading || tickersLoading\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? 'Loading..' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Back>\n          <Link to=\"/\">HOME👈</Link>\n        </Back>\n\n        <Title>\n          {state?.name ? state.name : loading ? 'Loading..' : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>{tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/${coinId}/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n            <Route path={`/${coinId}/price`}>\n              <Price coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default Coin\n","import React, { useEffect, useState } from 'react'\nimport { useQueries, useQuery } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { fetchCoins } from '../api'\nimport { Helmet } from 'react-helmet'\nimport { useSetRecoilState } from 'recoil'\nimport { isDarkAtom } from '../atoms'\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CoinsList = styled.ul``\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.textColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n  a {\n    padding: 20px;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 48px;\n`\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90vh;\n  font-size: 24px;\n`\n\nconst Img = styled.img`\n  width: 36px;\n  height: 36px;\n  margin-right: 10px;\n`\n\ninterface ICoin {\n  id: string\n  name: string\n  symbol: string\n  rank: number\n  is_new: boolean\n  is_active: boolean\n  type: string\n}\n\ninterface ICoinsProps {}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins)\n  const setDarkAtom = useSetRecoilState(isDarkAtom)\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev)\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins | Crypto Tracker</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n        <button onClick={toggleDarkAtom}>Toggle Mode </button>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: {\n                    name: coin.name,\n                  },\n                }}\n              >\n                <Img\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  )\n}\n\nexport default Coins\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Coin from './routes/Coin'\nimport Coins from './routes/Coins'\n\ninterface IRouterProps {}\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\nexport default Router\n","import { DefaultTheme } from 'styled-components'\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#353b48',\n  textColor: 'blue',\n  accentColor: '#8c7ae6',\n}\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: 'whitesmoke',\n  textColor: 'black',\n  accentColor: '#8c7ae6',\n}\n","import React from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport Router from './Router'\nimport { ThemeProvider } from 'styled-components'\n\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport { darkTheme, lightTheme } from './theme'\nimport { useRecoilValue } from 'recoil'\nimport { isDarkAtom } from './atoms'\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Open+Sans&family=Source+Sans+Pro&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\n\na {\n\n  text-decoration: none;\n  color:inherit\n}\n`\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom)\n\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { RecoilRoot } from 'recoil'\nimport App from './App'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}